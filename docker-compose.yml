services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb-home-control
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_DB:-home_control_db}
      POSTGRES_PASSWORD: ${POSTGRES_USER:-home_control_user}
      POSTGRES_DB: ${POSTGRES_PASSWORD:-home_control_password}
    volumes:
      - d:/dev/docker/share/home-control/timescale:/var/lib/postgresql/data
      # - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - home_control_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-home-control
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@home-control.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "5050:80"
    networks:
      - home_control_network
    depends_on:
      - "timescaledb"

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    container_name: kafka-home-control
    ports:
      - "9092:9092"
      - "9093:9093"
      - "29092:29092"
    expose:
      - "9092"
      - "9093"
      - "29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

      KAFKA_METADATA_LOG_DIR: /var/lib/kafka/kraft
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_NUM_PARTITIONS: 1

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

      CLUSTER_ID: "tTzszS7rTBeUOZxEcBeKUQ"
    volumes:
      - d:/dev/docker/share/home-control/kafka:/var/lib/kafka/data
      - ./metadata:/var/lib/kafka/kraft
    #healthcheck:
    #  test:
    #    [
    #      "CMD-SHELL",
    #      "kafka-topics",
    #      "--list",
    #      "--bootstrap-server",
    #      "kafka:29092",
    #    ]
    #  interval: 10s
    #  timeout: 30s
    #  retries: 5
    networks:
      - home_control_network

  redis:
    image: redis:7.2-alpine
    container_name: redis-home-control
    ports:
      - "6379:6379"
    volumes:
      - d:/dev/docker/share/home-control/redis:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 6
      start_period: 10s
    networks:
      - home_control_network

  # loki:
  #   image: grafana/loki:2.8.2
  #   container_name: loki-home-control
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes:
  #     - ./loki-config.yaml:/etc/loki/local-config.yaml
  #   networks:
  #     - home_control_network

  # promtail:
  #   image: grafana/promtail:2.8.2
  #   container_name: promtail-home-control
  #   volumes:
  #     - d:/dev/docker/share/home-control/promtail:/var/log
  #     - ./promtail-config.yaml:/etc/promtail/config.yaml
  #   command: -config.file=/etc/promtail/config.yaml
  #   networks:
  #     - home_control_network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana-home-control
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - loki
  #   networks:
  #     - home_control_network

  home-control-fetcher:
    image: rsiegfanz/home-control-fetcher
    container_name: home-control-fetcher
    environment:
      URL: xx
      MODUS: climate_current
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: home_control_db
      POSTGRES_USER: home_control_user
      POSTGRES_PASSWORD: home_control_password
      KAFKA_HOST: kafka:29092
    volumes:
      - d:/dev/docker/share/home-control/promtail:/var/log
    depends_on:
      - kafka
      - home-control-seeder
    networks:
      - home_control_network

  home-control-ingestor:
    image: rsiegfanz/home-control-ingestor
    container_name: home-control-ingestor
    environment:
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: home_control_db
      POSTGRES_USER: home_control_user
      POSTGRES_PASSWORD: home_control_password
      KAFKA_HOST: kafka:29092
      REDIS_HOST: redis:6379
      REDIS_PASSWORD: x
      REDIS_DB: 0
    volumes:
      - d:/dev/docker/share/home-control/promtail:/var/log
    depends_on:
      #kafka:
      #  condition: service_healthy
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - home_control_network

  home-control-seeder:
    image: rsiegfanz/home-control-seeder
    container_name: home-control-seeder
    environment:
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: home_control_db
      POSTGRES_USER: home_control_user
      POSTGRES_PASSWORD: home_control_password
      KAFKA_HOST: kafka:29092
    volumes:
      - d:/dev/docker/share/home-control/promtail:/var/log
    depends_on:
      #kafka:
      #  condition: service_healthy
      timescaledb:
        condition: service_healthy
    networks:
      - home_control_network

  # home-control-server:
  #   image: rsiegfanz/home-control-server
  #   container_name: home-control-server
  #   environment:
  #     POSTGRES_HOST: timescaledb
  #     POSTGRES_PORT: 5432
  #     POSTGRES_DBNAME: home_control_db
  #     POSTGRES_USER: home_control_user
  #     POSTGRES_PASSWORD: home_control_password
  #     ADDRESS: 0.0.0.0:8080
  #     REDIS_HOST: redis:6379
  #     REDIS_PASSWORD: x
  #     REDIS_DB: 0
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - d:/dev/docker/share/home-control/promtail:/var/log
  #   depends_on:
  #     timescaledb:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   networks:
  #     - home_control_network

networks:
  home_control_network:
    driver: bridge
